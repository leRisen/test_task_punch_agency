{
	"info": {
		"_postman_id": "25131ac1-4b52-420a-95f2-fd51eb54e8b1",
		"name": "Test Task API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6953777"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "login",
									"value": "test",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tasks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "sort_by",
									"value": "title",
									"description": "id,title,is_completed",
									"disabled": true
								},
								{
									"key": "sort_direction",
									"value": "asc",
									"description": "asc,desc",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Title\",\r\n    \"description\": \"Description\",\r\n    \"is_completed\": false,\r\n    \"due_date\": \"22.09.2025\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tasks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Title2\",\r\n    \"description\": \"Description2\",\r\n    \"is_completed\": true,\r\n    \"due_date\": \"23.09.2025\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tasks/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tasks/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.request.headers.add({key: 'accept', value: 'application/json' })\r",
					"pm.request.headers.add({key: 'referer', value: pm.collectionVariables.get('referer')})\r",
					"\r",
					"if (pm.request.method.toLowerCase() !== 'get') {\r",
					"    const baseUrl = pm.collectionVariables.get('base_url')\r",
					"\r",
					"    pm.sendRequest({\r",
					"        url: `${baseUrl}/csrf-cookie`,\r",
					"        method: 'GET'\r",
					"    }, function (error, response, {cookies}) {\r",
					"        if (!error) {\r",
					"            pm.request.headers.add({key: 'X-XSRF-TOKEN', value: cookies.get('XSRF-TOKEN')})\r",
					"        }\r",
					"    })\r",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000/api",
			"type": "string"
		},
		{
			"key": "referer",
			"value": "localhost:8000",
			"type": "string"
		}
	]
}